#!/usr/bin/env bash
set -euo pipefail

DOMAIN_IN="${1:-}"
HA_BACKEND="${2:-192.168.1.196:8123}"

[[ "$HA_BACKEND" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}:[0-9]+$ ]] || {
  echo "Usage: home-server-setup [domain] [ha_ip:port]" >&2; exit 1; }

DOMAIN="${DOMAIN_IN:-$(scutil --get LocalHostName 2>/dev/null || hostname -s).home.arpa}"

# ── Directory Structure ─────────────────────────────────────────────────────
ROOT_DIR="$HOME/home-server"
NGINX_DIR="$ROOT_DIR/nginx"
SITES_DIR="$NGINX_DIR/sites-enabled"
LOGS_DIR="$NGINX_DIR/logs"
HTML_DIR="$ROOT_DIR/html"
PLIST="$HOME/Library/LaunchAgents/homebrew.home-server.local.plist"
TEMPLATE_DIR="$(brew --prefix home-server)/share/home-server"
BREW_NGINX="$(brew --prefix nginx)/bin/nginx"

mkdir -p "$SITES_DIR" "$LOGS_DIR" "$HTML_DIR"
mkdir -p "$HOME/Library/LaunchAgents"

# ── Template Rendering ───────────────────────────────────────────────────────
render() {
  sed -e "s|{{ROOT_DIR}}|$ROOT_DIR|g" \
     -e "s|{{DOMAIN}}|$DOMAIN|g" \
     -e "s|{{HA_BACKEND}}|$HA_BACKEND|g" \
     -e "s|{{HTML_DIR}}|$HTML_DIR|g" \
     -e "s|{{LOGS_DIR}}|$LOGS_DIR|g" \
     -e "s|{{NGINX_DIR}}|$NGINX_DIR|g" \
     -e "s|{{SITES_DIR}}|$SITES_DIR|g" \
     -e "s|{{BREW_NGINX}}|$BREW_NGINX|g" \
     "$1" > "$2"
}

render "$TEMPLATE_DIR/nginx.conf.tmpl" "$NGINX_DIR/nginx.conf"
render "$TEMPLATE_DIR/vhost.conf.tmpl" "$SITES_DIR/default.conf"
render "$TEMPLATE_DIR/index.html.tmpl" "$HTML_DIR/index.html"
render "$TEMPLATE_DIR/launchd.plist.tmpl" "$PLIST"

# ── Service Management ──────────────────────────────────────────────────────
launchctl unload "$PLIST" 2>/dev/null || true
launchctl load -w "$PLIST"

cat <<EOF
✅ Setup complete! Services available at:

   Dashboard:     http://$DOMAIN
   UniFi:         http://unifi.$DOMAIN
   Plex:          http://pms.$DOMAIN
   Home Assistant: http://ha.$DOMAIN
   qBittorrent:   http://qbittorrent.$DOMAIN
EOF
