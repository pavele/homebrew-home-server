#!/usr/bin/env bash
# -----------------------------------------------------------------------------
#  nginx-mini-setup  —  bootstrap ~/home-server  (single user)
#  Proxies:
#    • UniFi Controller     → 127.0.0.1:8443   (HTTPS)
#    • Plex Media Server    → 127.0.0.1:32400  (HTTP)
#    • Home‑Assistant       → configurable IP:PORT  (HTTP)
#    • qBittorrent Web UI   → 127.0.0.1:8081   (HTTP)
# -----------------------------------------------------------------------------
set -euo pipefail

# ── CLI ----------------------------------------------------------------------
DOMAIN_IN="${1:-}"
HA_BACKEND="${2:-192.168.1.196:8123}"

[[ "$HA_BACKEND" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:[0-9]+$ ]] || {
  echo "Usage: nginx-mini-setup [domain] [ha_ip:port]" >&2; exit 1; }

DOMAIN="${DOMAIN_IN:-$(scutil --get LocalHostName 2>/dev/null || hostname -s).local}"

echo "▶  Domain          : $DOMAIN"
echo "▶  Home‑Assistant  : $HA_BACKEND"

# ── Paths --------------------------------------------------------------------
ROOT_DIR="$HOME/home-server"
NGINX_DIR="$ROOT_DIR/nginx"
SSL_DIR="$NGINX_DIR/ssl"
SITES_DIR="$NGINX_DIR/sites-enabled"
HTML_DIR="$ROOT_DIR/html"

CRT="$SSL_DIR/${DOMAIN}.crt"
KEY="$SSL_DIR/${DOMAIN}.key"

PLIST="$HOME/Library/LaunchAgents/homebrew.nginx.local.plist"
BREW_NGINX="$(brew --prefix nginx)/bin/nginx"
TEMPLATE_DIR="$(brew --prefix nginx-mini-stack)/share/nginx-mini-stack"

mkdir -p "$SSL_DIR" "$SITES_DIR" "$HTML_DIR"

# ── Wild‑card certificate -----------------------------------------------------
if [[ ! -f $CRT ]]; then
  openssl req -x509 -nodes -newkey rsa:4096 -days 825 \
          -keyout "$KEY" -out "$CRT" \
          -subj "/CN=*.$DOMAIN" \
          -addext "subjectAltName=DNS:$DOMAIN,DNS:*.$DOMAIN"
  echo "✔  Certificate created  → $CRT"
fi

# ── Simple renderer -----------------------------------------------------------
render() {  # template  dest
  sed \
    -e "s|{{ROOT_DIR}}|$ROOT_DIR|g" \
    -e "s|{{DOMAIN}}|$DOMAIN|g" \
    -e "s|{{CRT}}|$CRT|g" \
    -e "s|{{KEY}}|$KEY|g" \
    -e "s|{{HA_BACKEND}}|$HA_BACKEND|g" \
    -e "s|{{NGINX_CONF}}|$NGINX_DIR/nginx.conf|g" \
    -e "s|{{BREW_NGINX}}|$BREW_NGINX|g" \
    "$1" > "$2"
}

# ── Render configs ------------------------------------------------------------
render "$TEMPLATE_DIR/nginx.conf.tmpl"        "$NGINX_DIR/nginx.conf"
render "$TEMPLATE_DIR/vhost.conf.tmpl"        "$SITES_DIR/$DOMAIN.conf"
render "$TEMPLATE_DIR/index.html.tmpl"        "$HTML_DIR/index.html"
render "$TEMPLATE_DIR/launchd.plist.tmpl"     "$PLIST"

# ── Launch / reload nginx via launchd ----------------------------------------
launchctl unload "$PLIST" 2>/dev/null || true
launchctl load  "$PLIST"

# ── Summary -------------------------------------------------------------------
cat <<EOF

----------------------------------------------------------------------
✔ nginx running with configuration in  $ROOT_DIR

  Landing page :  http://$DOMAIN
  UniFi        :  https://unifi.$DOMAIN
  Plex         :  https://pms.$DOMAIN
  Home Assistant (→ $HA_BACKEND)
               :  https://ha.$DOMAIN
  qBittorrent  :  https://qbittorrent.$DOMAIN

All files reside under:  $ROOT_DIR
LaunchAgent plist :      $PLIST
----------------------------------------------------------------------
EOF